On 11Apr2024 this project became an offical cyberdome project.

11Apr2024 Functionality
    -program involving 4 files.  The program itself, a configuration file, an input file, and an output file
    -currently it works by taking in values from the config file and searching for them and the next token
        in the input file.
        -then it appends those two values to the output file.
        -Run like this .exe infile.txt outfile.txt
        -overwrites and creates a new outfile, even if it has the same name

Where it's going
     -fix some output bugs
     -then create functionality for it to spit out an Atlassian markdown formatted jira ticket.
     -Create functionality to spit for weekly report
     -Create functionality to parse and create a monthly report

11APR2024
    -Working on fixing the description bug. I will probably just magic code this
        -ended up using getline, which I should have started with. May convert all that logic to getline
    -delimiter idea noted in config file for future*******

12APR2024
    -Initial Push to Github
    -Current  functionality - .exe inputfile output file, spits out desired values into output file.
    -Significantly cleaned up parsing logic using getline().
    -Started on Jira ticke generation

13APR2024
    -Fixed mild bug involving skipping over a token when using the getline
    -Added parsing rule for '[' (bracketed list).
    
Next 50 meter target
    -Add a less volatile Alert Seperation handler
    -Currently it's 'amsg', 
    -change it to check if the current  match is at a lesser index than the last match
      -This should trigger at the very beginning, I think that will make it more consistent for ticket generation


    /////////NOTES/////////////
   
          --Learn that markdown and compile good examples of Jira tickets
       
           --Find fringe cases for adding newline at the end of the json copied files
           --First make a jira ticket output.
           --Learn Atlassian Markdown  for output
           --Auto connect to VirusTotal API? Could be very ambitious
           --Need a better way to put paragraph breaks between copied alerts. Currently using amsg as a flag, but that doesn't always work
                ***Best Idea So Far: It'll need a counter or something that tracks the if the matched token is at an earlier index than the last found token


           --Need to find a way to spit out top level domain query without reduncies
                ***Can create a boolean found value, but that can get tricky later, keeping track of it is a pain